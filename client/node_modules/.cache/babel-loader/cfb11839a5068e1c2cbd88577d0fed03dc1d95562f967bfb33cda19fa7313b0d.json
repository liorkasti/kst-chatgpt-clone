{"ast":null,"code":"var _jsxFileName = \"/Users/liorkastenbaum/Workspace/NodeJS/kst-chatgpt-clone/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultMessage = {\n  title: \"\",\n  role: \"user\",\n  content: \"\"\n};\nconst App = () => {\n  _s();\n  const [currentTitle, setCurrentTitle] = useState(\"\");\n  const [previousMessages, setPreviousMessages] = useState([]);\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [message, setMessage] = useState(defaultMessage);\n  const createNewChat = () => {\n    setMessage(defaultMessage);\n    setMessageContent(\"\");\n    setCurrentTitle(\"\");\n  };\n  const sendMessage = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: messageContent\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch(\"http://localhost:8080/api/chat\", options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.log(\"Error in sendMessage: \", error);\n    }\n  };\n  useEffect(() => {\n    // We're initiating a new chat\n    if (!currentTitle && messageContent && message) {\n      setCurrentTitle(messageContent);\n    }\n\n    // We're in an existing chat\n    if (currentTitle && messageContent && message) {\n      setPreviousMessages(prev => [...prev, {\n        title: currentTitle,\n        role: \"user\",\n        message: messageContent\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message, currentTitle]);\n  const selectExistingChat = title => {\n    setCurrentTitle(title);\n    setMessage(defaultMessage);\n    setMessageContent(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ New chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"DAMMY CHAT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"powered-by\",\n          children: \"Github @LiorKasti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"KST-GPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: messageContent,\n              onChange: e => setMessageContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"submit\",\n              onClick: getMessages,\n              children: \"\\u27A2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: \"ChatGPT is a free-to-use AI system. Use it for engaging conversations, gain insights, automate tasks, and witness the future of AI, all in one place.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uTCqOc/abAjFjZ+rWsSXlGhu3cI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","defaultMessage","title","role","content","App","_s","currentTitle","setCurrentTitle","previousMessages","setPreviousMessages","messageContent","setMessageContent","message","setMessage","createNewChat","sendMessage","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","log","prev","selectExistingChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","id","onClick","getMessages","_c","$RefreshReg$"],"sources":["/Users/liorkastenbaum/Workspace/NodeJS/kst-chatgpt-clone/client/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport interface Message {\n  title: string;\n  role: \"user\" | \"assistant\";\n  content: string;\n}\nconst defaultMessage: Message = {\n  title: \"\",\n  role: \"user\",\n  content: \"\",\n};\n\nconst App = () => {\n  const [currentTitle, setCurrentTitle] = useState(\"\");\n  const [previousMessages, setPreviousMessages] = useState<Message[]>([]);\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [message, setMessage] = useState<Message>(defaultMessage);\n\n  const createNewChat = () => {\n    setMessage(defaultMessage);\n    setMessageContent(\"\");\n    setCurrentTitle(\"\");\n  };\n\n  const sendMessage = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: messageContent,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:8080/api/chat\", options);\n      const data = await response.json();\n\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.log(\"Error in sendMessage: \", error);\n    }\n  };\n\n  useEffect(() => {\n    // We're initiating a new chat\n    if (!currentTitle && messageContent && message) {\n      setCurrentTitle(messageContent);\n    }\n\n    // We're in an existing chat\n    if (currentTitle && messageContent && message) {\n      setPreviousMessages(\n        (prev) =>\n          [\n            ...prev,\n            {\n              title: currentTitle,\n              role: \"user\",\n              message: messageContent,\n            },\n            {\n              title: currentTitle,\n              role: message.role,\n              content: message.content,\n            },\n          ] as Message[]\n      );\n    }\n  }, [message, currentTitle]);\n\n  const selectExistingChat = (title: string) => {\n    setCurrentTitle(title);\n    setMessage(defaultMessage);\n    setMessageContent(\"\");\n  };\n\n  return (\n    <div className='app'>\n      <section className='side-bar'>\n        <button>+ New chat</button>\n        <ul className='history'>\n          <li>DAMMY CHAT </li>\n        </ul>\n        <nav>\n          <p className='powered-by'>Github @LiorKasti</p>\n        </nav>\n      </section>\n      <section className='main'>\n        {!currentTitle && <h1>KST-GPT</h1>}\n        <ul className='feed'>\n          <div className='bottom-section'>\n            <div className='input-container'>\n              <input\n                value={messageContent}\n                onChange={(e) => setMessageContent(e.target.value)}\n              />\n              <div id='submit' onClick={getMessages}>\n                âž¢\n              </div>\n            </div>\n            <p className='info'>\n              ChatGPT is a free-to-use AI system. Use it for engaging\n              conversations, gain insights, automate tasks, and witness the\n              future of AI, all in one place.\n            </p>\n          </div>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}